class TrieNode:
    def __init__(self):
        self.children={}
        self.end = False
class Trie:
    def __init__(self):
        self.root = TrieNode()
        
        

    def insert(self, word: str) -> None:
        cur= self.root
        
        for char in word:
            if char not in cur.children:
                cur.children[char] = TrieNode()
            cur = cur.children[char]
        cur.end=True
            
        

    def search(self, word: str) -> bool:
        cur = self.root
        for char in word:
            if char in cur.children:
                cur = cur.children[char]
                continue
            return False
        if cur.end==True:
            return True
        return False
        

    def startsWith(self, prefix: str) -> bool:
        cur = self.root
        for char in prefix:
            if char in cur.children:
                cur = cur.children[char]
                continue
            return False
        return True
