import heapq
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeKLists(self, lists: List[Optional[ListNode]]) -> Optional[ListNode]:
        lst=[]
        for i in range(len(lists)):
            while lists[i]:
                lst.append(lists[i].val)
                lists[i]=lists[i].next
        heapq.heapify(lst)
        node=ListNode(-1)
        head=node
        while lst:
            minn=heapq.heappop(lst)
            node.next=ListNode(minn)
            node=node.next
        return head.next
