# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        if not root:
            return True
        q1=collections.deque([root])
        q2=collections.deque([root])
        q1.append(root.left)
        q2.append(root.right)
        while q1 and q2:
            n1=q1.popleft()
            n2=q2.popleft()
            if (n1==None and n2!=None) or (n1!=None and n2==None):
                return False
            if n1!=None:
                if n1.val!=n2.val:
                    return False
                q1.append(n1.left)
                q1.append(n1.right)
                q2.append(n2.right)
                q2.append(n2.left)
        return True
