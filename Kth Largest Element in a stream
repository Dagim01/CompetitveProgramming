class KthLargest:

    def __init__(self, k: int, nums: List[int]):
        self.minimum=nums
        self.k=k
        heapq.heapify(self.minimum)
        while len(self.minimum)>k:
            heapq.heappop(self.minimum)

    def add(self, val: int) -> int:
        heapq.heappush(self.minimum, val)
        if len(self.minimum)>self.k:
            heapq.heappop(self.minimum)
        return self.minimum[0]
