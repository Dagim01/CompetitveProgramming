from collections import deque
class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        q1=deque()
        time=0
        fresh=0
        ROW, COL= len(grid),len(grid[0])
        for i in range(ROW):
            for j in range(COL):
                if grid[i][j]==1:
                    fresh+=1
                if grid[i][j]==2:
                    q1.append([i,j])
        directions=[[0,1],[0,-1],[1,0],[-1,0]]
        while q1 and fresh > 0:
            for i in range(len(q1)):
                r,c=q1.popleft()
                for dr, dc in directions:
                    row, col= dr+r, dc+c
                    if (row<0 or row==len(grid)) or (col<0 or col==len(grid[0])) or ( grid[row][col]!=1):
                        continue
                    grid[row][col]=2
                    q1.append([row,col])
                    fresh-=1
            time+=1
        return time if fresh==0 else -1
