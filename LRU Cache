class LRUCache:

    def __init__(self, capacity: int):
        self.capacity = capacity
        self.items = dict()        

    def get(self, key: int) -> int:
        result = self.items.pop(key, -1)
        if result == -1:
            return -1
        else:
            self.items[key] = result
            return result
        
    def put(self, key: int, value: int) -> None:
        result = self.items.pop(key, -1)
        if result == -1 and len(self.items) == self.capacity:             
            del self.items[next(iter(self.items))]
        self.items[key] = value
